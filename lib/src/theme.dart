// generated by https://material-foundation.github.io/material-theme-builder/

import "package:flutter/material.dart";

class MaterialTheme {
  final TextTheme textTheme;

  const MaterialTheme(this.textTheme);

  static ColorScheme lightScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff2459b1),
      surfaceTint: Color(0xff275bb4),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff4372cc),
      onPrimaryContainer: Color(0xfffefcff),
      secondary: Color(0xff4f5e82),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xffc4d4fe),
      onSecondaryContainer: Color(0xff4c5b7f),
      tertiary: Color(0xff873e91),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xffa357ab),
      onTertiaryContainer: Color(0xfffffbff),
      error: Color(0xffba1a1a),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffffdad6),
      onErrorContainer: Color(0xff93000a),
      surface: Color(0xfffaf9ff),
      onSurface: Color(0xff191b21),
      onSurfaceVariant: Color(0xff434752),
      outline: Color(0xff737783),
      outlineVariant: Color(0xffc3c6d4),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2e3036),
      inversePrimary: Color(0xffafc6ff),
      primaryFixed: Color(0xffd9e2ff),
      onPrimaryFixed: Color(0xff001a43),
      primaryFixedDim: Color(0xffafc6ff),
      onPrimaryFixedVariant: Color(0xff004398),
      secondaryFixed: Color(0xffd9e2ff),
      onSecondaryFixed: Color(0xff081a3b),
      secondaryFixedDim: Color(0xffb6c6ef),
      onSecondaryFixedVariant: Color(0xff374669),
      tertiaryFixed: Color(0xffffd6fd),
      onTertiaryFixed: Color(0xff35003f),
      tertiaryFixedDim: Color(0xfffaabff),
      onTertiaryFixedVariant: Color(0xff6f2779),
      surfaceDim: Color(0xffd9d9e1),
      surfaceBright: Color(0xfffaf9ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff3f3fb),
      surfaceContainer: Color(0xffededf5),
      surfaceContainerHigh: Color(0xffe7e7f0),
      surfaceContainerHighest: Color(0xffe2e2ea),
    );
  }

  ThemeData light() {
    return theme(lightScheme());
  }

  static ColorScheme lightMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff003377),
      surfaceTint: Color(0xff275bb4),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff3a6ac4),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff263657),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff5d6d91),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff5c1367),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff9a50a3),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff740006),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffcf2c27),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffaf9ff),
      onSurface: Color(0xff0f1117),
      onSurfaceVariant: Color(0xff323641),
      outline: Color(0xff4e525e),
      outlineVariant: Color(0xff696d79),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2e3036),
      inversePrimary: Color(0xffafc6ff),
      primaryFixed: Color(0xff3a6ac4),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff1951aa),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff5d6d91),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff455478),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff9a50a3),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff7f3789),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffc5c6ce),
      surfaceBright: Color(0xfffaf9ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff3f3fb),
      surfaceContainer: Color(0xffe7e7f0),
      surfaceContainerHigh: Color(0xffdcdce4),
      surfaceContainerHighest: Color(0xffd1d1d9),
    );
  }

  ThemeData lightMediumContrast() {
    return theme(lightMediumContrastScheme());
  }

  static ColorScheme lightHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff002963),
      surfaceTint: Color(0xff275bb4),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff00459c),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff1b2b4c),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff39496b),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff50035c),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff722a7c),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff600004),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff98000a),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffaf9ff),
      onSurface: Color(0xff000000),
      onSurfaceVariant: Color(0xff000000),
      outline: Color(0xff282c37),
      outlineVariant: Color(0xff454954),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2e3036),
      inversePrimary: Color(0xffafc6ff),
      primaryFixed: Color(0xff00459c),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff003070),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff39496b),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff223253),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff722a7c),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff570e63),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffb8b8c0),
      surfaceBright: Color(0xfffaf9ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff0f0f8),
      surfaceContainer: Color(0xffe2e2ea),
      surfaceContainerHigh: Color(0xffd3d4dc),
      surfaceContainerHighest: Color(0xffc5c6ce),
    );
  }

  ThemeData lightHighContrast() {
    return theme(lightHighContrastScheme());
  }

  static ColorScheme darkScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffafc6ff),
      surfaceTint: Color(0xffafc6ff),
      onPrimary: Color(0xff002d6c),
      primaryContainer: Color(0xff628feb),
      onPrimaryContainer: Color(0xff00173d),
      secondary: Color(0xffb6c6ef),
      onSecondary: Color(0xff203051),
      secondaryContainer: Color(0xff374669),
      onSecondaryContainer: Color(0xffa5b5dd),
      tertiary: Color(0xfffaabff),
      onTertiary: Color(0xff550a61),
      tertiaryContainer: Color(0xffc273ca),
      onTertiaryContainer: Color(0xff310039),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      surface: Color(0xff111319),
      onSurface: Color(0xffe2e2ea),
      onSurfaceVariant: Color(0xffc3c6d4),
      outline: Color(0xff8d909d),
      outlineVariant: Color(0xff434752),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe2e2ea),
      inversePrimary: Color(0xff275bb4),
      primaryFixed: Color(0xffd9e2ff),
      onPrimaryFixed: Color(0xff001a43),
      primaryFixedDim: Color(0xffafc6ff),
      onPrimaryFixedVariant: Color(0xff004398),
      secondaryFixed: Color(0xffd9e2ff),
      onSecondaryFixed: Color(0xff081a3b),
      secondaryFixedDim: Color(0xffb6c6ef),
      onSecondaryFixedVariant: Color(0xff374669),
      tertiaryFixed: Color(0xffffd6fd),
      onTertiaryFixed: Color(0xff35003f),
      tertiaryFixedDim: Color(0xfffaabff),
      onTertiaryFixedVariant: Color(0xff6f2779),
      surfaceDim: Color(0xff111319),
      surfaceBright: Color(0xff37393f),
      surfaceContainerLowest: Color(0xff0c0e14),
      surfaceContainerLow: Color(0xff191b21),
      surfaceContainer: Color(0xff1d1f25),
      surfaceContainerHigh: Color(0xff282a30),
      surfaceContainerHighest: Color(0xff33353b),
    );
  }

  ThemeData dark() {
    return theme(darkScheme());
  }

  static ColorScheme darkMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffcfdcff),
      surfaceTint: Color(0xffafc6ff),
      onPrimary: Color(0xff002357),
      primaryContainer: Color(0xff628feb),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xffcfdcff),
      onSecondary: Color(0xff142545),
      secondaryContainer: Color(0xff8190b7),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xffffccff),
      onTertiary: Color(0xff460051),
      tertiaryContainer: Color(0xffc273ca),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xffffd2cc),
      onError: Color(0xff540003),
      errorContainer: Color(0xffff5449),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff111319),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xffd9dcea),
      outline: Color(0xffaeb1bf),
      outlineVariant: Color(0xff8c909d),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe2e2ea),
      inversePrimary: Color(0xff00449a),
      primaryFixed: Color(0xffd9e2ff),
      onPrimaryFixed: Color(0xff00102f),
      primaryFixedDim: Color(0xffafc6ff),
      onPrimaryFixedVariant: Color(0xff003377),
      secondaryFixed: Color(0xffd9e2ff),
      onSecondaryFixed: Color(0xff00102f),
      secondaryFixedDim: Color(0xffb6c6ef),
      onSecondaryFixedVariant: Color(0xff263657),
      tertiaryFixed: Color(0xffffd6fd),
      onTertiaryFixed: Color(0xff25002b),
      tertiaryFixedDim: Color(0xfffaabff),
      onTertiaryFixedVariant: Color(0xff5c1367),
      surfaceDim: Color(0xff111319),
      surfaceBright: Color(0xff43444b),
      surfaceContainerLowest: Color(0xff06070c),
      surfaceContainerLow: Color(0xff1b1d23),
      surfaceContainer: Color(0xff26282e),
      surfaceContainerHigh: Color(0xff313239),
      surfaceContainerHighest: Color(0xff3c3d44),
    );
  }

  ThemeData darkMediumContrast() {
    return theme(darkMediumContrastScheme());
  }

  static ColorScheme darkHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffecefff),
      surfaceTint: Color(0xffafc6ff),
      onPrimary: Color(0xff000000),
      primaryContainer: Color(0xffa9c2ff),
      onPrimaryContainer: Color(0xff000a23),
      secondary: Color(0xffecefff),
      onSecondary: Color(0xff000000),
      secondaryContainer: Color(0xffb3c2eb),
      onSecondaryContainer: Color(0xff000a23),
      tertiary: Color(0xffffeafb),
      onTertiary: Color(0xff000000),
      tertiaryContainer: Color(0xfff9a5ff),
      onTertiaryContainer: Color(0xff1b0021),
      error: Color(0xffffece9),
      onError: Color(0xff000000),
      errorContainer: Color(0xffffaea4),
      onErrorContainer: Color(0xff220001),
      surface: Color(0xff111319),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xffffffff),
      outline: Color(0xffedeffe),
      outlineVariant: Color(0xffbfc2d0),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe2e2ea),
      inversePrimary: Color(0xff00449a),
      primaryFixed: Color(0xffd9e2ff),
      onPrimaryFixed: Color(0xff000000),
      primaryFixedDim: Color(0xffafc6ff),
      onPrimaryFixedVariant: Color(0xff00102f),
      secondaryFixed: Color(0xffd9e2ff),
      onSecondaryFixed: Color(0xff000000),
      secondaryFixedDim: Color(0xffb6c6ef),
      onSecondaryFixedVariant: Color(0xff00102f),
      tertiaryFixed: Color(0xffffd6fd),
      onTertiaryFixed: Color(0xff000000),
      tertiaryFixedDim: Color(0xfffaabff),
      onTertiaryFixedVariant: Color(0xff25002b),
      surfaceDim: Color(0xff111319),
      surfaceBright: Color(0xff4e5056),
      surfaceContainerLowest: Color(0xff000000),
      surfaceContainerLow: Color(0xff1d1f25),
      surfaceContainer: Color(0xff2e3036),
      surfaceContainerHigh: Color(0xff393b42),
      surfaceContainerHighest: Color(0xff45464d),
    );
  }

  ThemeData darkHighContrast() {
    return theme(darkHighContrastScheme());
  }

  ThemeData theme(ColorScheme colorScheme) => ThemeData(
        useMaterial3: true,
        brightness: colorScheme.brightness,
        colorScheme: colorScheme,
        textTheme: textTheme.apply(
          bodyColor: colorScheme.onSurface,
          displayColor: colorScheme.onSurface,
        ),
        scaffoldBackgroundColor: colorScheme.background,
        canvasColor: colorScheme.surface,
      );

  List<ExtendedColor> get extendedColors => [];
}

class ExtendedColor {
  final Color seed, value;
  final ColorFamily light;
  final ColorFamily lightHighContrast;
  final ColorFamily lightMediumContrast;
  final ColorFamily dark;
  final ColorFamily darkHighContrast;
  final ColorFamily darkMediumContrast;

  const ExtendedColor({
    required this.seed,
    required this.value,
    required this.light,
    required this.lightHighContrast,
    required this.lightMediumContrast,
    required this.dark,
    required this.darkHighContrast,
    required this.darkMediumContrast,
  });
}

class ColorFamily {
  const ColorFamily({
    required this.color,
    required this.onColor,
    required this.colorContainer,
    required this.onColorContainer,
  });

  final Color color;
  final Color onColor;
  final Color colorContainer;
  final Color onColorContainer;
}
